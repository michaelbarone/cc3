name: Pull Request Checks

on:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.base_ref || github.actor }}-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write
  issues: write
  pull-requests: write

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Read .nvmrc
        run: echo "NVMRC=$(cat .nvmrc)" >> $GITHUB_ENV

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "${{ env.NVMRC }}"
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

  build:
    name: Build
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Read .nvmrc
        run: echo "NVMRC=$(cat .nvmrc)" >> $GITHUB_ENV

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "${{ env.NVMRC }}"
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build
        id: build
        run: |
          start_time=$(date +%s)
          npm run build
          end_time=$(date +%s)
          duration=$((end_time - start_time))
          echo "duration=$duration" >> $GITHUB_OUTPUT

      - name: Create Build Summary
        if: always()
        run: |
          echo "### 🏗️ Build Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ job.status }}" = "success" ]; then
            echo "✅ Build completed successfully in ${{ steps.build.outputs.duration }} seconds" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Build failed" >> $GITHUB_STEP_SUMMARY
            echo "Please check the build logs for more details." >> $GITHUB_STEP_SUMMARY
          fi

      - name: Post Build Comment
        if: always()
        uses: actions/github-script@v7
        env:
          COMMENT_BODY: ${{process.env.GITHUB_STEP_SUMMARY}}
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: process.env.COMMENT_BODY
            });

  lint:
    name: Lint
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Read .nvmrc
        run: echo "NVMRC=$(cat .nvmrc)" >> $GITHUB_ENV

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "${{ env.NVMRC }}"
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Lint
        id: lint
        run: |
          start_time=$(date +%s)
          npm run lint > lint_output.txt 2>&1 || true
          end_time=$(date +%s)
          duration=$((end_time - start_time))
          echo "duration=$duration" >> $GITHUB_OUTPUT
          cat lint_output.txt

      - name: Create Lint Summary
        if: always()
        run: |
          echo "### 🔍 Lint Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ job.status }}" = "success" ]; then
            echo "✅ Lint passed successfully in ${{ steps.lint.outputs.duration }} seconds" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Lint failed" >> $GITHUB_STEP_SUMMARY
            echo "### Lint Output" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            cat lint_output.txt >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Post Lint Comment
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const summary = require('fs').readFileSync(process.env.GITHUB_STEP_SUMMARY, 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });

  test:
    name: Test
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Read .nvmrc
        run: echo "NVMRC=$(cat .nvmrc)" >> $GITHUB_ENV

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "${{ env.NVMRC }}"
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Run Tests with Coverage
        id: test
        run: |
          start_time=$(date +%s)
          npm run test:coverage
          end_time=$(date +%s)
          duration=$((end_time - start_time))
          echo "duration=$duration" >> $GITHUB_OUTPUT

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

      - name: Create Test Summary
        if: always()
        run: |
          echo "### 🧪 Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ job.status }}" = "success" ]; then
            echo "✅ Tests completed successfully in ${{ steps.test.outputs.duration }} seconds" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Tests failed" >> $GITHUB_STEP_SUMMARY
            echo "Please check the test logs for more details." >> $GITHUB_STEP_SUMMARY
          fi

      - name: Post Test Summary Comment
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const summary = require('fs').readFileSync(process.env.GITHUB_STEP_SUMMARY, 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });

      - name: Post Coverage Comment
        uses: romeovs/lcov-reporter-action@v0.3.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          lcov-file: ./coverage/lcov.info
          delete-old-comments: true
          title: Test Coverage Report
