generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  username      String         @unique
  passwordHash  String?
  isAdmin       Boolean        @default(false)
  lastActiveUrl String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  avatarUrl     String?
  menuPosition  String?        @default("side")
  themeMode     String?        @default("light")
  userUrlGroups UserUrlGroup[]
}

model UrlGroup {
  id            String         @id @default(uuid())
  name          String
  description   String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  urls          Url[]
  userUrlGroups UserUrlGroup[]
}

model Url {
  id                 String   @id @default(uuid())
  urlGroupId         String
  title              String
  url                String
  iconPath           String?
  displayOrder       Int      @default(0)
  idleTimeoutMinutes Int      @default(10)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  urlGroup           UrlGroup @relation(fields: [urlGroupId], references: [id], onDelete: Cascade)
}

model UserUrlGroup {
  userId     String
  urlGroupId String
  createdAt  DateTime @default(now())
  urlGroup   UrlGroup @relation(fields: [urlGroupId], references: [id], onDelete: Cascade)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([userId, urlGroupId])
}

model AppConfig {
  id                 String   @id @default("app-config")
  appName            String   @default("URL Dashboard")
  appLogo            String?
  loginTheme         String   @default("dark")
  registrationEnabled Boolean  @default(false)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}
